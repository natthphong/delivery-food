{
  "openapi": "3.0.3",
  "info": {
    "title": "BaanFoodie API",
    "version": "1.0.0",
    "description": "OpenAPI documentation for all Next.js API routes under src/pages/api/**."
  },
  "servers": [
    {
      "url": "https://api.baanfoodie.local",
      "description": "Local/preview"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Authentication & account"
    },
    {
      "name": "user",
      "description": "User profile & card"
    },
    {
      "name": "catalog",
      "description": "Branch search & menus"
    },
    {
      "name": "payment",
      "description": "Transactions & payment"
    },
    {
      "name": "order",
      "description": "Order lifecycle"
    },
    {
      "name": "utility",
      "description": "Utility endpoints"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "/api/branch/summary": {
      "get": {
        "tags": [
          "branch"
        ],
        "summary": "Get branch summaries and availability",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated branch IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "type": "object",
                          "properties": {
                            "branches": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/BranchSummary"
                              }
                            }
                          },
                          "required": [
                            "branches"
                          ]
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "ApiEnvelope": {
        "type": "object",
        "required": [
          "code",
          "message",
          "body"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "body": {
            "nullable": true
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "firebase_uid",
          "email",
          "phone",
          "provider",
          "is_email_verified",
          "is_phone_verified",
          "balance",
          "card",
          "txn_history",
          "order_history",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "firebase_uid": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "is_email_verified": {
            "type": "boolean",
            "nullable": true
          },
          "is_phone_verified": {
            "type": "boolean",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "card": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartBranchGroup"
            }
          },
          "txn_history": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "order_history": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CartAddOn": {
        "type": "object",
        "required": [
          "name",
          "price"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CartItem": {
        "type": "object",
        "required": [
          "productId",
          "productName",
          "qty",
          "price",
          "productAddOns"
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "qty": {
            "type": "integer",
            "minimum": 1
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "productAddOns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartAddOn"
            }
          }
        }
      },
      "CartBranchGroup": {
        "type": "object",
        "required": [
          "branchId",
          "companyId",
          "branchName",
          "productList"
        ],
        "properties": {
          "branchId": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "branchName": {
            "type": "string"
          },
          "productList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          }
        },
        "description": "Server-managed cart group. Deprecated branchImage field is intentionally omitted."
      },
      "Transaction": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "user_id",
          "txn_type",
          "txn_method_id",
          "reversal",
          "amount",
          "adjust_amount",
          "status",
          "expired_at",
          "created_at",
          "updated_at",
          "trans_ref",
          "trans_date",
          "trans_timestamp"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "company_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer",
            "nullable": true
          },
          "txn_type": {
            "type": "string",
            "enum": [
              "deposit",
              "payment"
            ]
          },
          "txn_method_id": {
            "type": "integer",
            "nullable": true
          },
          "reversal": {
            "type": "boolean"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "adjust_amount": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "accepted",
              "rejected"
            ]
          },
          "expired_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "trans_ref": {
            "type": "string",
            "nullable": true
          },
          "trans_date": {
            "type": "string",
            "nullable": true
          },
          "trans_timestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "TransactionMethod": {
        "type": "object",
        "required": [
          "id",
          "code",
          "name",
          "type",
          "details"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "qr",
              "balance"
            ],
            "nullable": true
          },
          "details": {
            "nullable": true
          }
        }
      },
      "OrderDelivery": {
        "type": "object",
        "required": [
          "lat",
          "lng",
          "distanceKm"
        ],
        "properties": {
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "format": "double"
          },
          "distanceKm": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "OrderDetails": {
        "type": "object",
        "required": [
          "userId",
          "branchId",
          "branchName",
          "productList"
        ],
        "properties": {
          "userId": {
            "type": "integer"
          },
          "branchId": {
            "type": "string"
          },
          "branchName": {
            "type": "string"
          },
          "productList": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "qty",
                "price",
                "productId",
                "productName",
                "productAddOns"
              ],
              "properties": {
                "qty": {
                  "type": "integer"
                },
                "price": {
                  "type": "number",
                  "format": "double"
                },
                "productId": {
                  "type": "string"
                },
                "productName": {
                  "type": "string"
                },
                "productAddOns": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartAddOn"
                  }
                }
              }
            }
          },
          "delivery": {
            "$ref": "#/components/schemas/OrderDelivery",
            "nullable": true
          },
          "branchLat": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "branchLng": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "Order": {
        "type": "object",
        "required": [
          "id",
          "branch_id",
          "txn_id",
          "order_details",
          "status",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "branch_id": {
            "type": "integer"
          },
          "txn_id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "order_details": {
            "$ref": "#/components/schemas/OrderDetails"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "PREPARE",
              "DELIVERY",
              "COMPLETED",
              "REJECTED"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Branch": {
        "type": "object",
        "required": [
          "id",
          "company_id",
          "name",
          "description",
          "image_url",
          "address_line",
          "lat",
          "lng",
          "open_hours",
          "is_force_closed"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "company_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true
          },
          "address_line": {
            "type": "string",
            "nullable": true
          },
          "lat": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "lng": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "open_hours": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "nullable": true
          },
          "is_force_closed": {
            "type": "boolean"
          }
        }
      },
      "BranchSummary": {
        "type": "object",
        "required": [
          "id",
          "name",
          "branchIsOpen"
        ],
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "address": { "type": "string", "nullable": true },
          "image_url": { "type": "string", "nullable": true },
          "lat": { "type": "number", "format": "double", "nullable": true },
          "lng": { "type": "number", "format": "double", "nullable": true },
          "branchIsOpen": { "type": "boolean" },
          "openHours": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": { "type": "string" },
                "minItems": 2,
                "maxItems": 2
              }
            }
          }
        }
      },
      "BranchMenuItem": {
        "type": "object",
        "required": [
          "product_id",
          "name",
          "description",
          "image_url",
          "price",
          "is_enabled",
          "stock_qty",
          "add_ons"
        ],
        "properties": {
          "product_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "image_url": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "stock_qty": {
            "type": "integer",
            "nullable": true
          },
          "add_ons": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "price",
                "is_required",
                "group_name"
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "price": {
                  "type": "number",
                  "format": "double"
                },
                "is_required": {
                  "type": "boolean"
                },
                "group_name": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "BranchMenuPayload": {
        "type": "object",
        "required": [
          "branch",
          "menu"
        ],
        "properties": {
          "branch": {
            "$ref": "#/components/schemas/Branch"
          },
          "menu": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchMenuItem"
            }
          },
          "page": {
            "type": "integer",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "SearchProductSample": {
        "type": "object",
        "required": [
          "id",
          "name",
          "price"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "SearchBranch": {
        "type": "object",
        "required": [
          "id",
          "name",
          "image_url",
          "address_line",
          "is_open",
          "is_force_closed",
          "open_hours",
          "distance_km",
          "products_sample"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "image_url": {
            "type": "string",
            "nullable": true
          },
          "address_line": {
            "type": "string",
            "nullable": true
          },
          "is_open": {
            "type": "boolean"
          },
          "is_force_closed": {
            "type": "boolean"
          },
          "open_hours": {
            "type": "object",
            "nullable": true
          },
          "distance_km": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "products_sample": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "price"
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "price": {
                  "type": "number",
                  "format": "double",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "Category": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "PaymentResponseBody": {
        "type": "object",
        "required": [
          "method",
          "txn",
          "order"
        ],
        "properties": {
          "method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionMethod"
              }
            ],
            "nullable": true
          },
          "txn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Transaction"
              }
            ],
            "nullable": true
          },
          "order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Order"
              }
            ],
            "nullable": true
          },
          "paymentPayload": {
            "type": "object",
            "nullable": true,
            "properties": {
              "payment_id": {
                "type": "string"
              }
            }
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "TxnDetails": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Transaction"
          }
        ],
        "properties": {
          "isExpired": {
            "type": "boolean"
          },
          "method": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer"
              },
              "code": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "nullable": true
              }
            }
          },
          "order": {
            "$ref": "#/components/schemas/Order",
            "nullable": true
          }
        }
      },
      "OrderDetailEntry": {
        "type": "object",
        "required": [
          "id",
          "status",
          "displayStatus",
          "created_at",
          "updated_at",
          "order_details",
          "branch",
          "txn"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          },
          "displayStatus": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "order_details": {
            "$ref": "#/components/schemas/OrderDetails"
          },
          "branch": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string",
                "nullable": true
              },
              "lat": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "lng": {
                "type": "number",
                "format": "double",
                "nullable": true
              }
            }
          },
          "txn": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "status": {
                "type": "string"
              },
              "expired_at": {
                "type": "string",
                "nullable": true
              },
              "isExpired": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "AuthTokensBody": {
        "type": "object",
        "required": [
          "accessToken",
          "refreshToken",
          "user"
        ],
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "EmailVerifyBody": {
        "type": "object",
        "required": [
          "ok"
        ],
        "properties": {
          "ok": {
            "type": "boolean"
          }
        }
      },
      "CardMutationBody": {
        "type": "object",
        "required": [
          "user"
        ],
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "SearchResponseBody": {
        "type": "object",
        "required": [
          "branches",
          "categories"
        ],
        "properties": {
          "branches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchBranch"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          }
        }
      },
      "TxnListBody": {
        "type": "object",
        "required": [
          "transactions"
        ],
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        }
      },
      "TxnDetailsBody": {
        "type": "object",
        "required": [
          "txns"
        ],
        "properties": {
          "txns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxnDetails"
            }
          }
        }
      },
      "MethodListBody": {
        "type": "object",
        "required": [
          "methods"
        ],
        "properties": {
          "methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionMethod"
            }
          }
        }
      },
      "ConfigResponseBody": {
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "OrderListBody": {
        "type": "object",
        "required": [
          "orders"
        ],
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderWithTxn"
            }
          }
        }
      },
      "OrderDetailsBody": {
        "type": "object",
        "required": [
          "orders"
        ],
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDetailEntry"
            }
          }
        }
      },
      "OrderSingleBody": {
        "type": "object",
        "required": [
          "order"
        ],
        "properties": {
          "order": {
            "$ref": "#/components/schemas/Order",
            "nullable": true
          }
        }
      },
      "HelloBody": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "TxnSingleBody": {
        "type": "object",
        "required": [
          "txn"
        ],
        "properties": {
          "txn": {
            "$ref": "#/components/schemas/Transaction",
            "nullable": true
          }
        }
      },
      "TxnWithMethodBody": {
        "type": "object",
        "required": [
          "txn",
          "method"
        ],
        "properties": {
          "txn": {
            "$ref": "#/components/schemas/Transaction",
            "nullable": true
          },
          "method": {
            "$ref": "#/components/schemas/TransactionMethod",
            "nullable": true
          }
        }
      },
      "OrderWithTxn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Order"
          },
          {
            "type": "object",
            "properties": {
              "txn": {
                "$ref": "#/components/schemas/Transaction",
                "nullable": true
              }
            }
          }
        ]
      }
    }
  },
  "paths": {
    "/api/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Exchange Firebase ID token for BaanFoodie JWT tokens",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "idToken"
                ],
                "properties": {
                  "idToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/AuthTokensBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid idToken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create user via Firebase and issue JWT tokens",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "provider"
                ],
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "password",
                      "google",
                      "phone"
                    ]
                  },
                  "email": {
                    "type": "string",
                    "nullable": true
                  },
                  "password": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendVerifyEmail": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "idToken": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/AuthTokensBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid signup payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/refresh-token": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Rotate refresh token and issue a new access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/AuthTokensBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/login-line": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login using LINE profile data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "profile"
                ],
                "properties": {
                  "profile": {
                    "type": "object",
                    "required": [
                      "userId"
                    ],
                    "properties": {
                      "userId": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/AuthTokensBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid LINE profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/send-verify-email": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Send Firebase verification email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "idToken"
                ],
                "properties": {
                  "idToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/EmailVerifyBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Missing idToken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/me": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get authenticated user profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/CardMutationBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/card/save": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Save or merge shopping cart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "replace": {
                    "type": "boolean"
                  },
                  "card": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CartBranchGroup"
                    }
                  },
                  "add": {
                    "$ref": "#/components/schemas/CartBranchGroup"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/CardMutationBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid cart payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/card/clear-by-branch": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Clear cart items for a branch",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "branchId"
                ],
                "properties": {
                  "branchId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/CardMutationBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid branchId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/account/update": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Update user email/phone verification flags",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "nullable": true
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true
                  },
                  "is_email_verified": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "is_phone_verified": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/CardMutationBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "409": {
            "description": "Email or phone already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/search": {
      "get": {
        "tags": [
          "catalog"
        ],
        "summary": "Search branches",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/SearchResponseBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/branches/{id}/menu": {
      "get": {
        "tags": [
          "catalog"
        ],
        "summary": "Get paginated branch menu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/BranchMenuPayload"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid branch id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/branches/{id}/top-menu": {
      "get": {
        "tags": [
          "catalog"
        ],
        "summary": "Get branch recommended menu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/BranchMenuPayload"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid branch id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/payment": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "Create payment transaction and order",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "companyId",
                  "methodId",
                  "amount",
                  "branchId",
                  "orderDetails"
                ],
                "properties": {
                  "companyId": {
                    "type": "integer"
                  },
                  "methodId": {
                    "type": "integer"
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0
                  },
                  "branchId": {
                    "type": "integer"
                  },
                  "orderDetails": {
                    "$ref": "#/components/schemas/OrderDetails"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/PaymentResponseBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload or business rule violation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "500": {
            "description": "Order creation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/payment/slipok": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "Upload slip for SlipOK verification",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "txnId",
                  "file"
                ],
                "properties": {
                  "txnId": {
                    "type": "integer"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "qrFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Slip verification result",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/TxnSingleBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "500": {
            "description": "SlipOK configuration or upstream error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/list": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "List transactions by ids",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated ids"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/TxnListBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/details": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "Retrieve enriched transaction details",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/TxnDetailsBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "Retrieve enriched transaction details (POST)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "type": "string"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/TxnDetailsBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/{txnId}": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "Get single transaction",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "txnId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction and method",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/TxnWithMethodBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid txnId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/create": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "Create transaction",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "companyId",
                  "txnType",
                  "methodId",
                  "amount"
                ],
                "properties": {
                  "companyId": {
                    "type": "integer"
                  },
                  "txnType": {
                    "type": "string",
                    "enum": [
                      "deposit",
                      "payment"
                    ]
                  },
                  "methodId": {
                    "type": "integer"
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/TxnSingleBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload or insufficient balance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "500": {
            "description": "Transaction creation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/method": {
      "get": {
        "tags": [
          "payment"
        ],
        "summary": "List transaction methods",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/MethodListBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid companyId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/order/list": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get orders with transaction joins",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/OrderListBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/order/details": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get detailed orders",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/OrderDetailsBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Get detailed orders (POST)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "type": "string"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/OrderDetailsBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/order/by-transaction": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get order by transaction id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "txnId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/OrderSingleBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid txnId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/system/config": {
      "get": {
        "tags": [
          "utility"
        ],
        "summary": "Get system configuration",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/ConfigResponseBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/qr/generate": {
      "post": {
        "tags": [
          "utility"
        ],
        "summary": "Generate PromptPay QR",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "branchId"
                ],
                "properties": {
                  "branchId": {
                    "type": "integer"
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "QR PNG or JSON payload",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "type": "object",
                          "properties": {
                            "pngDataUrl": {
                              "type": "string"
                            },
                            "payload": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "number",
                              "format": "double",
                              "nullable": true
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/mock/qr": {
      "get": {
        "tags": [
          "utility"
        ],
        "summary": "Mock PromptPay QR",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emv",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "QR image or EMV string",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    },
    "/api/hello": {
      "get": {
        "tags": [
          "utility"
        ],
        "summary": "Authenticated hello",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiEnvelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "body": {
                          "$ref": "#/components/schemas/HelloBody"
                        }
                      },
                      "required": [
                        "body"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiEnvelope"
                }
              }
            }
          }
        }
      }
    }
  }
}
